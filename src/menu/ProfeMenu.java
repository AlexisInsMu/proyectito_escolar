/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package menu;

import javax.swing.JOptionPane;
import personal.Profesor;
import personal.Profesor_aux;
import personal.person;
import school.university;

/**
 *
 * @author ldrnt
 */
public class ProfeMenu extends javax.swing.JFrame {
    final private  university uni;
    private Profesor profesor_vacio;
    /**
     * Creates new form ProfeMenu
     */
    public ProfeMenu(university uni) {
        this.uni = uni;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        verMaterias = new javax.swing.JButton();
        verAlumnos = new javax.swing.JButton();
        verGrupos = new javax.swing.JButton();
        backPrincipalProfe = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Book Antiqua", 1, 18)); // NOI18N
        jLabel1.setText("Men√∫ Profesor");

        verMaterias.setFont(new java.awt.Font("Book Antiqua", 0, 14)); // NOI18N
        verMaterias.setText("Ver materias");
        verMaterias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verMateriasActionPerformed(evt);
            }
        });

        verAlumnos.setFont(new java.awt.Font("Book Antiqua", 0, 14)); // NOI18N
        verAlumnos.setText("Ver alumnos");
        verAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verAlumnosActionPerformed(evt);
            }
        });

        verGrupos.setFont(new java.awt.Font("Book Antiqua", 0, 14)); // NOI18N
        verGrupos.setText("Ver grupos");
        verGrupos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verGruposActionPerformed(evt);
            }
        });

        backPrincipalProfe.setFont(new java.awt.Font("Book Antiqua", 2, 14)); // NOI18N
        backPrincipalProfe.setText("Regresar");
        backPrincipalProfe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backPrincipalProfeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(verMaterias)
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(verAlumnos))
                        .addGap(33, 33, 33)
                        .addComponent(verGrupos))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(backPrincipalProfe)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(verMaterias)
                    .addComponent(verAlumnos)
                    .addComponent(verGrupos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(backPrincipalProfe)
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void verMateriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verMateriasActionPerformed
        String cedula = JOptionPane.showInputDialog("Dame la cedula del profesor:");
        if(uni.buscarProfesorPorCedula(cedula) != null){
            person Person = uni.buscarProfesorPorCedula(cedula);
            if (Person instanceof Profesor_aux) {
                Profesor_aux profesor = (Profesor_aux) Person;
                if (profesor.getMaterias().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "El profesor auxiliar no tiene materias asignadas", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, profesor.imprimirMaterias());
                }
            } else if (Person instanceof Profesor) {
                Profesor profesor = (Profesor) Person;
                if (profesor.getMaterias().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "El profesor no tiene materias asignadas", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, profesor.imprimirMaterias());
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "Profesor no encontrado","Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_verMateriasActionPerformed

    private void backPrincipalProfeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backPrincipalProfeActionPerformed
        PrincipalMenu principalMenu = new PrincipalMenu(uni, profesor_vacio);
        principalMenu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backPrincipalProfeActionPerformed

    private void verAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verAlumnosActionPerformed
        String cedula = JOptionPane.showInputDialog("Dame la cedula del profesor:");
        if(uni.buscarProfesorPorCedula(cedula) != null){
            person Person = uni.buscarProfesorPorCedula(cedula);
            if (Person instanceof Profesor_aux) {
                Profesor_aux profesor = (Profesor_aux) Person;
                if (profesor.getMaterias().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "El profesor auxiliar no tiene alumnos asignados", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, profesor.imprimirAlumnos());
                }
            } else if (Person instanceof Profesor) {
                Profesor profesor = (Profesor) Person;
                if (profesor.getMaterias().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "El profesor no tiene alumnos asignados", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, profesor.imprimirAlumnos());
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "Profesor no encontrado","Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_verAlumnosActionPerformed

    private void verGruposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verGruposActionPerformed
        String cedula = JOptionPane.showInputDialog("Dame la cedula del profesor:");
        if(uni.buscarProfesorPorCedula(cedula) != null){
            person Person = uni.buscarProfesorPorCedula(cedula);
            if (Person instanceof Profesor_aux) {
                Profesor_aux profesor = (Profesor_aux) Person;
                if (profesor.getMaterias().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "El profesor auxiliar no tiene Grupos asignados", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, profesor.imprimirGrupos());
                }
            } else if (Person instanceof Profesor) {
                Profesor profesor = (Profesor) Person;
                if (profesor.getMaterias().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "El profesor no tiene Grupos asignados", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, profesor.imprimirGrupos());
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "Profesor no encontrado","Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_verGruposActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProfeMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProfeMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProfeMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProfeMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        university uni = new university();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProfeMenu(uni).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backPrincipalProfe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton verAlumnos;
    private javax.swing.JButton verGrupos;
    private javax.swing.JButton verMaterias;
    // End of variables declaration//GEN-END:variables
}
